#include <keyboard.h>
#include <vga.h>

u8 display_frame(u8 x0, u8 y0, u8 x1, u8 y1) {
	// corners
	vga_set((u8*)vga_char_seg + VGA_OFFSET(x0, y0), 0xc9u8);
	vga_set((u8*)vga_char_seg + VGA_OFFSET(x0, y1), 0xc8u8);
	vga_set((u8*)vga_char_seg + VGA_OFFSET(x1, y0), 0xbbu8);
	vga_set((u8*)vga_char_seg + VGA_OFFSET(x1, y1), 0xbcu8);

	// edges
	u8 i = x0 + 1u8;
	while (i < x1) {
		vga_set((u8*)vga_char_seg + VGA_OFFSET(i, y0), 0xcdu8);
		vga_set((u8*)vga_char_seg + VGA_OFFSET(i, y1), 0xcdu8);
		i += 1u8;
	}
	i = y0 + 1u8;
	while (i < y1) {
		vga_set((u8*)vga_char_seg + VGA_OFFSET(x0, i), 0xbau8);
		vga_set((u8*)vga_char_seg + VGA_OFFSET(x1, i), 0xbau8);
		i += 1u8;
	}
}

export u8 main() {
	u8 key;
	u8 bg = 0u8;
	vga_clear(COLOR(COLOR_GRAY, COLOR_BLACK));
	while (1u8) {
		key = keyboard_wait_key_released();

		if (key == KEY_DOWN) {
			bg = (bg + 1u8) & 0x0fu8;
			vga_clear(COLOR(COLOR_GRAY, bg));
		} else if (key == KEY_UP) {
			bg = (bg - 1u8) & 0x0fu8;
			vga_clear(COLOR(COLOR_GRAY, bg));
		}
		display_frame(12u8, 9u8, 27u8, 11u8);
		vga_put_text(14u8, 10u8, "Hello World!");
	}
}
