#include <keyboard.h>
#include <vga.h>
#include <string.h>
#include <entropy.h>
#include "life/quasipixel.h"
#include "life/life.h"
#include "calc/main.h"
#include "maze/main.h"

u8 life_main() {
    qp_init(COLOR_MAGENTA, COLOR_BROWN);
    life_init();
    qp_render();
    qp_set_cursor_enabled(1u8);
    u8 running = 0u8;
    while (1u8) {
        u8 key;
        if (!running) {
            // drawing mode
            key = keyboard_wait_key_released();
            if (key == KEY_UP || key == KEY_8) {
                qp_move_cursor(0s8, -1s8);
            } else if (key == KEY_DOWN || key == KEY_0) {
                qp_move_cursor(0s8, 1s8);
            } else if (key == KEY_LEFT) {
                qp_move_cursor(-1s8, 0s8);
            } else if (key == KEY_RIGHT) {
                qp_move_cursor(1s8, 0s8);
            } else if (key == KEY_ENT) {
                qp_set_and_render(qp_cursor_x, qp_cursor_y, 1u8);
                life_set(qp_cursor_x, qp_cursor_y, 1u8);
            } else if (key == KEY_ESC) {
                qp_set_and_render(qp_cursor_x, qp_cursor_y, 0u8);
                life_set(qp_cursor_x, qp_cursor_y, 0u8);
            } else if (key == KEY_STAR) {
                qp_render_all();
            } else if (key == KEY_F1) {
                running = 1u8;
                qp_set_cursor_enabled(0u8);
            } else if (key == KEY_F2) {
                return;
            }
        } else {
            // running mode
            key = keyboard_get_if_pressed();
            if (key == KEY_NO_KEY) {
                life_step_and_render();
            } else {
                if (key == KEY_F2) {
                    return;
                }
                running = 0u8;
                qp_set_cursor_enabled(1u8);
            }
        }
    }
}

export u8 display_frame(u8 x0, u8 y0, u8 x1, u8 y1) {
    // corners
    vga_set((u8*)vga_char_seg + VGA_OFFSET(x0, y0), 0xc9u8);
    vga_set((u8*)vga_char_seg + VGA_OFFSET(x0, y1), 0xc8u8);
    vga_set((u8*)vga_char_seg + VGA_OFFSET(x1, y0), 0xbbu8);
    vga_set((u8*)vga_char_seg + VGA_OFFSET(x1, y1), 0xbcu8);

    // edges
    u8 i = x0 + 1u8;
    while (i < x1) {
        vga_set((u8*)vga_char_seg + VGA_OFFSET(i, y0), 0xcdu8);
        vga_set((u8*)vga_char_seg + VGA_OFFSET(i, y1), 0xcdu8);
        i += 1u8;
    }
    i = y0 + 1u8;
    while (i < y1) {
        vga_set((u8*)vga_char_seg + VGA_OFFSET(x0, i), 0xbau8);
        vga_set((u8*)vga_char_seg + VGA_OFFSET(x1, i), 0xbau8);
        i += 1u8;
    }
}



export u8 main() {
    while (1u8) {
        vga_clear(COLOR(COLOR_WHITE, COLOR_BLUE));
        vga_put_text(34u8, 13u8, "1. Calculator");
        vga_put_text(34u8, 15u8, "2. Life");
        vga_put_text(34u8, 16u8, "3. Maze");
        display_frame(32u8, 11u8, 49u8, 18u8);
        u8 key = KEY_NO_KEY;
        while (key != KEY_1 && key != KEY_2 && key != KEY_3) {
            key = keyboard_wait_key_released_entropy();
        }
        if (key == KEY_2) {
            life_main();
        } else if (key == KEY_1) {
            calc_main();
        } else if (key == KEY_3) {
            maze_main();
        }
    }
}
